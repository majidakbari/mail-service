version: '3.7'

services:

  ## --------------------------------------------------
  ## | Web Server - Php7.3.11-apache
  ## --------------------------------------------------
  app:
    build:
      context: .docker-compose/app
      dockerfile: Dockerfile
      args:
        - WWW_DATA_USER_ID=${WWW_DATA_USER_ID}
    container_name: app
    volumes:
      - ./app:/var/www/
      - ./.docker-compose/backend/config/php.ini:/usr/local/etc/php/php.ini
      - ./.data/app/log/webserver:/var/log/apache2
      - ./.data/app/log/supervisor:/var/log/supervisor
    environment:
      - WWW_DATA_USER_ID=${WWW_DATA_USER_ID}
      - EXCLUDE_PORTS=443
    ports:
      - "${BACKEND_ADDRESS}:80"
    restart: always
    depends_on:
      - db
      - redis
    env_file:
      - .env

  ## --------------------------------------------------
  ## | Database - MySQL 5.7.27
  ## --------------------------------------------------
  db:
    image: mysql:5.7.27
    container_name: db
    volumes:
      - ./.data/db:/var/lib/mysql
    ports:
      - "${DB_ADDRESS}:3306"
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}

  ## --------------------------------------------------
  ## | Redis - Queue and Cache and Session Provider
  ## --------------------------------------------------
  redis:
    image: redis:alpine
    container_name: redis
    expose:
      - "6379"
    restart: always

  ## --------------------------------------------------
  ## | PHPMyAdmin - Handle the administration of MySQL
  ## --------------------------------------------------
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      - PMA_PORT=3306
      - PMA_HOST=db
      - PMA_USER=${DB_USERNAME}
      - PMA_PASSWORD=${DB_PASSWORD}
    restart: always
    depends_on:
      - db
    ports:
      - "${PMA_ADDRESS}:80"

  ## --------------------------------------------------
  ## | Swagger - API Documentation
  ## --------------------------------------------------
  swagger:
    image: swaggerapi/swagger-ui
    container_name: swagger
    ports:
      - "${SWAGGER_ADDRESS}:8080"
    volumes:
      - ./.data/swagger/openapi.json:/openapi.json
    environment:
      SWAGGER_JSON: /openapi.json
